name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/api.dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/niveau-samuel-backend:latest
            ${{ secrets.DOCKER_REGISTRY }}/niveau-samuel-backend:${{ github.sha }}

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/web.dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/niveau-samuel-frontend:latest
            ${{ secrets.DOCKER_REGISTRY }}/niveau-samuel-frontend:${{ github.sha }}

  deploy-dev:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519_22
          chmod 600 ~/.ssh/id_ed25519_22
          ssh-keyscan -p 62222 -H dev22.iut.arcanit.io >> ~/.ssh/known_hosts

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Test SSH connection
        run: |
          ssh -i ~/.ssh/id_ed25519_22 -p 62222 -o StrictHostKeyChecking=no student@dev22.iut.arcanit.io "echo 'Connexion OK depuis GitHub Actions'"

      - name: Run Ansible playbook
        run: |
          cd ansible
          ansible-playbook -i inventory.ini deploy.yml \
            -e "app_directory=/home/student/app" \
            -e "registry=docker.iut.arcanit.io" \
            -e "registry_login=${{ secrets.DOCKER_LOGIN }}" \
            -e "registry_password=${{ secrets.DOCKER_PASSWORD }}" \
            -e "image_tag=${{ github.sha }}"

          